//////////////////////////////////////////////////////////////////////////////////
//                              Alien Inn Pty Ltd                               //
//                   War Drive Area 51 Moon Bounce Project                      //
//         Deep Space Sensor and Asset Control Concept Demonstrator             //
//                         !!! Hack the Planet, Again  !!!                      //  
//         (based on the code supplied with the Grove Beginners Kit             //
//////////////////////////////////////////////////////////////////////////////////

// INCLUDE SOME MODULES // // what is this who owns it where do i find it //

#include "Arduino.h" // what is this who owns it where do i find it
#include "LIS3DHTR.h" // Gravity Accellerator Sensor //
          #ifdef SOFTWAREWIRE
            #include <SoftwareWire.h>
              SoftwareWire myWire(3, 2);
              LIS3DHTR<SoftwareWire> LIS;       //Software I2C
              #define WIRE myWire
              #else
            #include <Wire.h>
              LIS3DHTR<TwoWire> LIS;           //Hardware I2C
              #define WIRE Wire
          #endif
#include "Seeed_BMP280.h" // what is this who owns it where do i find it
#include "Wire.h" // what is this who owns it where do i find it
#include "U8x8lib.h" // what is this who owns it where do i find it
#include "DHT.h" // what is this who owns it where do i find it
// #include "next module"

// DEFINITIONS //

int soundPin = A2; // Analog sound sensor is to be attached to analog
int ledPin = 4; // Digital LED is to be attached to digital
BMP280 bmp280;
#define DHTPIN 3     // what pin we're connected to
#define DHTTYPE DHT11   // DHT 11 
DHT dht(DHTPIN, DHTTYPE);

void setup() {
    // SET BAUD RATE //
      Serial.begin(9600); // initializes the serial port with a baud rate of 9600
    
    // SET LED //
      pinMode(ledPin, OUTPUT); // set the led up
      pinMode(soundPin, INPUT);
    
    // Gravity Accellerator
      while (!Serial) {};
      LIS.begin(WIRE, 0x19); //IIC init
      delay(100);
      LIS.setOutputDataRate(LIS3DHTR_DATARATE_50HZ);
    
    // Air pressure detection
      if (!bmp280.init()) {
       Serial.println("Device not connected or broken!");
      }

    // Temperature and Humidity Sensor
      dht.begin();
  }

// START OF THE CODE //

  void loop() {
//    PRINT HELLO WORLD //
      Serial.println("hello, 3rd Rock from the Sun"); // prints a string to a serial port
      Serial.println("I am a remote sensor from the planet Beatle Juice"); 
      
// GPS goes here when it is identified
      Serial.print("My location seems to be :");
      Serial.print("LAT: ");
      Serial.println("LONG: ");
      
//    Blink the sensor LED on for one second and then turn off for one second to indicate it is functional//
      digitalWrite(ledPin, HIGH);
      delay(1000);
      digitalWrite(ledPin, LOW);
      delay(1000); //delay of 1 second

      Serial.println("My sensors indicate that the:");
//    Sound Control Light
      int soundState = analogRead(soundPin); // Read sound sensor’s value
      Serial.print("Sound Level is: ");
      Serial.print(soundState);
      Serial.println(" dB");
      // if the sound sensor’s value is greater than 400, the light will be on. Otherwise, the light will be turned off
      if (soundState > 400) {
          digitalWrite(ledPin, HIGH);
          }else{
          digitalWrite(ledPin, LOW);
       }
//    Gravity Acceleration
      if (!LIS) {
      Serial.println("LIS3DHTR didn't connect.");
      while (1);
          return;
      }
          //3 axis
          Serial.print("I am moving in the direction(s) of: ");
          Serial.print("x:"); Serial.print(LIS.getAccelerationX()); Serial.print(" m"); 
          Serial.print("  ");
          Serial.print("y:"); Serial.print(LIS.getAccelerationY()); Serial.print(" m"); 
          Serial.print("  ");
          Serial.print("z:"); Serial.print(LIS.getAccelerationZ()); 
          Serial.println(" m");
          delay(100);
          
    // Air pressure detection
          float pressure;
          //get and print temperatures
          Serial.print("Temperature: ");
          Serial.print(bmp280.getTemperature());
          Serial.println(" Celcius"); // The unit for Celsius because original arduino don't support speical symbols
          //get and print atmospheric pressure data
          Serial.print("Pressure: ");
          Serial.print(pressure = bmp280.getPressure());
          Serial.println(" Pascals");
          //get and print altitude data
          Serial.print("Altitude: ");
          Serial.print(bmp280.calcAltitude(pressure));
          Serial.println(" meters above sea level");
          delay(100);
          
    // Temperature and Humidity Sensor
          float temp, humi;
          //get and print humidity data to Serial
          temp = dht.readTemperature();
          humi = dht.readHumidity();
          Serial.print("Humidity: ");
          Serial.print(humi);
          Serial.println(" %");
          delay(100);

    //add a line between output of different times.
          Serial.println("\n"); 

} 
// END OF THE CODE //
